name: Build and Test

on:
  push:
    branches: [ main ]
    paths: 
      - 'binder/environment.yml'
      - 'binder/requirements.txt'
      - 'binder/postBuild'
      - 'binder/start'
      - 'binder/runtime.txt'
      - '.github/workflows/build.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'binder/environment.yml'
      - 'binder/requirements.txt'
      - 'binder/postBuild'
      - 'binder/start'
      - 'binder/runtime.txt'
      - '.github/workflows/build.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install repo2docker
      run: |
        pip install jupyter-repo2docker

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build Docker image with repo2docker
      run: |
        repo2docker \
          --user-name jovyan \
          --user-id 1000 \
          --no-run \
          --image-name ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          .

    - name: Tag additional versions
      if: github.event_name != 'pull_request'
      run: |
        # Tag with branch name
        docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                   ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
        
        # Tag as latest if main branch
        if [ "${{ github.ref_name }}" = "main" ]; then
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                     ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        fi

    - name: Run pytest with notebook validation
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/home/jovyan/work \
          -w /home/jovyan/work \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          pytest --nbval --current-env binder/*.ipynb

    - name: Run papermill preprocessing and test
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/home/jovyan/work \
          -w /home/jovyan/work \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          bash -c "
            papermill --prepare-only -p galaxy NGC5533 binder/07_Bonus_Bulge_Rotation_Curve.ipynb binder/07_Bonus_Bulge_Rotation_Curve_NGC5533.ipynb &&
            papermill --prepare-only -p galaxy NGC7814 binder/07_Bonus_Bulge_Rotation_Curve.ipynb binder/07_Bonus_Bulge_Rotation_Curve_NGC7814.ipynb &&
            pytest --nbval-lax binder/07_Bonus_Bulge_Rotation_Curve_NGC*.ipynb --current-env
          "

    - name: Push Docker image
      if: github.event_name != 'pull_request'
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
        
        if [ "${{ github.ref_name }}" = "main" ]; then
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        fi